[{"/Users/anaclaragarcia/Desktop/boilerplate/src/pages/_app.tsx":"1","/Users/anaclaragarcia/Desktop/boilerplate/src/pages/_document.tsx":"2","/Users/anaclaragarcia/Desktop/boilerplate/src/pages/index.tsx":"3","/Users/anaclaragarcia/Desktop/boilerplate/src/pages/[slug].tsx":"4","/Users/anaclaragarcia/Desktop/boilerplate/src/pages/place/[slug].tsx":"5","/Users/anaclaragarcia/Desktop/boilerplate/src/components/LinkWrapper/index.tsx":"6","/Users/anaclaragarcia/Desktop/boilerplate/src/components/LinkWrapper/styles.ts":"7","/Users/anaclaragarcia/Desktop/boilerplate/src/components/LinkWrapper/test.tsx":"8","/Users/anaclaragarcia/Desktop/boilerplate/src/components/Map/index.tsx":"9","/Users/anaclaragarcia/Desktop/boilerplate/src/components/Map/test.tsx":"10"},{"size":1164,"mtime":1632344413954,"results":"11","hashOfConfig":"12"},{"size":1024,"mtime":1631642585734,"results":"13","hashOfConfig":"12"},{"size":505,"mtime":1632346656432,"results":"14","hashOfConfig":"12"},{"size":1165,"mtime":1632162080061,"results":"15","hashOfConfig":"12"},{"size":1131,"mtime":1632170788522,"results":"16","hashOfConfig":"12"},{"size":295,"mtime":1631752651662,"results":"17","hashOfConfig":"12"},{"size":340,"mtime":1632329277813,"results":"18","hashOfConfig":"12"},{"size":390,"mtime":1631753729730,"results":"19","hashOfConfig":"12"},{"size":1578,"mtime":1632327110689,"results":"20","hashOfConfig":"12"},{"size":892,"mtime":1631745625486,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hoo2uo",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anaclaragarcia/Desktop/boilerplate/src/pages/_app.tsx",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/pages/_document.tsx",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/pages/index.tsx",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/pages/[slug].tsx",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/pages/place/[slug].tsx",["43"],"import { GetStaticProps } from 'next'\nimport client from 'graphql/client'\nimport { GET_PLACES, GET_PLACE_BY_SLUG } from 'graphql/queries'\nimport { useRouter } from 'next/dist/client/router'\nimport { PageTemplateProps } from 'templates/Pages'\nimport { GetPlaceBySlugQuery, GetPlacesQuery } from 'graphql/generated/graphql'\nimport PlacesTemplate, { PlacesTemplateProps } from 'templates/Places'\n\nexport default function Place({ place }: PlacesTemplateProps) {\n  const router = useRouter()\n\n  if (router.isFallback) return null\n\n  return <PlacesTemplate place={place} />\n}\n\nexport async function getStaticPaths() {\n  const { places } = await client.request<GetPlacesQuery>(GET_PLACES, {\n    first: 3\n  })\n\n  const paths = places.map(({ slug }) => ({\n    params: { slug }\n  }))\n\n  return { paths, fallback: 'blocking' }\n}\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const { place } = await client.request<GetPlaceBySlugQuery>(\n    GET_PLACE_BY_SLUG,\n    {\n      slug: `${params?.slug}`\n    }\n  )\n\n  if (!place) return { notFound: true }\n\n  return {\n    revalidate: 60,\n    props: {\n      place\n    }\n  }\n}\n","/Users/anaclaragarcia/Desktop/boilerplate/src/components/LinkWrapper/index.tsx",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/components/LinkWrapper/styles.ts",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/components/LinkWrapper/test.tsx",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/components/Map/index.tsx",[],"/Users/anaclaragarcia/Desktop/boilerplate/src/components/Map/test.tsx",[],{"ruleId":"44","severity":1,"message":"45","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":27},"@typescript-eslint/no-unused-vars","'PageTemplateProps' is defined but never used.","Identifier","unusedVar"]